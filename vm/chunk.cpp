//// Created by hlx on 2023/10/4.//#include "chunk.h"#include "memory.h"#include "vm.h"namespace cpplox {    Chunk::~Chunk() {        lines.size();        size_t oldSize = sizeof(int) * lines.capacity() + sizeof(uint8_t) * code.capacity();        compute(oldSize, 0);    }    int Chunk::addConstant(Value value) {        push(value);        this->constants.write(value);        pop();        return (int) (this->constants.size() - 1);    }    void Chunk::write(uint8_t byte, int line) {        size_t oldSize = code.capacity();        code.push_back(byte);        lines.push_back(line);        size_t newSize = code.capacity();        if (oldSize != newSize) {            oldSize = oldSize * sizeof(uint8_t) + oldSize * sizeof(int);            newSize = newSize * sizeof(uint8_t) + newSize * sizeof(int);            compute(oldSize, newSize);        }    }}