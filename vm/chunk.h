//// Created by hlx on 2023/10/4.//#ifndef CPPLOX_CHUNK_H#define CPPLOX_CHUNK_H#include "common.h"#include "value.h"namespace cpplox {    //  字节操作码    enum OpCode {        OP_CONSTANT,        // 写入常量        OP_NIL,             // 空指令 nil        OP_TRUE,            // true指令        OP_FALSE,           // false指令        OP_POP,             // 弹出指令        OP_GET_LOCAL,       // 获取局部变量        OP_SET_LOCAL,       // 赋值局部变量        OP_GET_GLOBAL,      // 获取全局变量        OP_DEFINE_GLOBAL,   // 定义全局变量        OP_SET_GLOBAL,      // 赋值全局变量        OP_GET_UPVALUE,     // 获取升值指令        OP_SET_UPVALUE,     // 赋值升值指令        OP_GET_PROPERTY,    // 获取属性指令        OP_SET_PROPERTY,    // 赋值属性指令        OP_GET_SUPER,       // 获取父类指令        OP_EQUAL,           // 赋值指令 =        OP_GREATER,         // 大于指令 >        OP_LESS,            // 小于指令 <        OP_ADD,             // 加指令 +        OP_SUBTRACT,        // 减指令 -        OP_MULTIPLY,        // 乘指令 *        OP_DIVIDE,          // 除指令 /        OP_NOT,             // 非指令 !        OP_NEGATE,          // 负指令 -        OP_PRINT,           // 打印指令        OP_JUMP,            // 分支跳转指令        OP_JUMP_IF_FALSE,   // if false分支跳转指令        OP_LOOP,            // 循环指令        OP_CALL,            // 调用指令        OP_INVOKE,          // 执行指令        OP_SUPER_INVOKE,    // 父类执行指令        OP_CLOSURE,         // 闭包指令        OP_CLOSE_UPVALUE,   // 关闭提升值        OP_RETURN,          // 返回指令        OP_CLASS,           // 类指令        OP_INHERIT,         // 继承指令        OP_METHOD           // 方法指令    };    // 字节码块    class Chunk {    public:        std::vector<uint8_t> code;          // 字节码数组        std::vector<int> lines;             // 源码行号        ValueArray constants;               // 字节码块常量数组        Chunk() = default;        int addConstant(Value value);        void write(uint8_t byte, int line);        ~Chunk();    };}#endif //CPPLOX_CHUNK_H